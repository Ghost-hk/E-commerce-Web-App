{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getDoc, setDoc, doc, getFirestore, collection, writeBatch, query, getDocs } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAk4VpOS32g0B0-_2v0x58RK34wMDx4yRY\",\n  authDomain: \"e-commerce-web-app-65227.firebaseapp.com\",\n  projectId: \"e-commerce-web-app-65227\",\n  storageBucket: \"e-commerce-web-app-65227.appspot.com\",\n  messagingSenderId: \"614437600917\",\n  appId: \"1:614437600917:web:3944ae2e8f8bd3ed8da59c\"\n};\nconst firebaseApp = initializeApp(firebaseConfig); // Sing in with google\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider); //Adding users to db\n\nconst db = getFirestore();\nexport const creatUserDocumentFromAuth = async function (userAuth) {\n  let additionalInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userRefDoc = doc(db, \"users\", userAuth.uid);\n  const userSnapShot = await getDoc(userRefDoc); // if user dosn't exist\n\n  if (!userSnapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRefDoc, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo\n      });\n    } catch (err) {\n      console.error(\"err msg: \", err.message);\n    }\n  }\n\n  return userRefDoc;\n}; // Sing in with email and password\n\nexport const createAuthUserWhitEmailAndPwd = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const SingInAuthUserWhitEmailAndPwd = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n}; // Sing Out\n\n_c = SingInAuthUserWhitEmailAndPwd;\nexport const SingOutUser = async () => await signOut(auth);\n_c2 = SingOutUser;\nexport const onAuthStateChangedListner = callback => onAuthStateChanged(auth, callback); // Adding atemss to database\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"Done\");\n};\n\nconst getcategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, \"categories\");\n  const q = query(collection);\n  const querySnapshot = await getDocs(q);\n  console.log(querySnapshot);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      titel,\n      item\n    } = docSnapshot;\n    acc[titel.toLowerCase()] = item;\n  }, {});\n  return categoryMap;\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingInAuthUserWhitEmailAndPwd\");\n$RefreshReg$(_c2, \"SingOutUser\");","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getDoc","setDoc","doc","getFirestore","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","creatUserDocumentFromAuth","userAuth","additionalInfo","userRefDoc","uid","userSnapShot","exists","displayName","email","createdAt","Date","err","console","error","message","createAuthUserWhitEmailAndPwd","password","SingInAuthUserWhitEmailAndPwd","SingOutUser","onAuthStateChangedListner","callback","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","log","getcategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","titel","item"],"sources":["/home/dawdi/Desktop/e-commerc_web-app/src/utils/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\n\nimport {\n  getDoc,\n  setDoc,\n  doc,\n  getFirestore,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAk4VpOS32g0B0-_2v0x58RK34wMDx4yRY\",\n  authDomain: \"e-commerce-web-app-65227.firebaseapp.com\",\n  projectId: \"e-commerce-web-app-65227\",\n  storageBucket: \"e-commerce-web-app-65227.appspot.com\",\n  messagingSenderId: \"614437600917\",\n  appId: \"1:614437600917:web:3944ae2e8f8bd3ed8da59c\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Sing in with google\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n//Adding users to db\nconst db = getFirestore();\n\nexport const creatUserDocumentFromAuth = async (\n  userAuth,\n  additionalInfo = {}\n) => {\n  const userRefDoc = doc(db, \"users\", userAuth.uid);\n  const userSnapShot = await getDoc(userRefDoc);\n\n  // if user dosn't exist\n  if (!userSnapShot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRefDoc, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo,\n      });\n    } catch (err) {\n      console.error(\"err msg: \", err.message);\n    }\n  }\n\n  return userRefDoc;\n};\n\n// Sing in with email and password\n\nexport const createAuthUserWhitEmailAndPwd = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const SingInAuthUserWhitEmailAndPwd = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\n// Sing Out\nexport const SingOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListner = (callback) =>\n  onAuthStateChanged(auth, callback);\n\n// Adding atemss to database\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log(\"Done\");\n};\n\nconst getcategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, \"categories\");\n  const q = query(collection);\n\n  const querySnapshot = await getDocs(q);\n  console.log(querySnapshot);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const { titel, item } = docSnapshot;\n    acc[titel.toLowerCase()] = item;\n  }, {});\n\n  return categoryMap;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}